@model Store.Domain.Entities.Thing

@{
    ViewBag.Title = "Editing panel";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="panel">
    <div class="panel-heading">
        <h3>Editing of «@Model.Name»</h3>
    </div>

    @using (Html.BeginForm("Edit", "Admin",
        FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="panel-body">

            @Html.HiddenFor(m => m.ThingId)
            @foreach (var property in ViewData.ModelMetadata.Properties)
            {
                switch (property.PropertyName)
                {
                    case "ThingId":
                    case "ImageData":
                    case "ImageMimeType":

                        break;
                    default:
                        <div class="form-group">
                            <label>@(property.DisplayName ?? property.PropertyName)</label>
                            
                            @if (property.PropertyName != "Category" )
                            {
                                @Html.TextArea(property.PropertyName, null,
                                    new { @class = "form-control"})
                            }
                            
                            else
                            {
                                @*@Html.TextArea(property.PropertyName, null,
                                    new { @class = "form-control", }


                                    )*@


                                {
                                    @Html.DropDownList("Category",
                                                        new SelectList(Enum.GetValues(typeof(Store.Domain.Entities.CatList)))
                                                        ,new{@class = "form-control"})
                                }

                            }

                            @Html.ValidationMessage(property.PropertyName)
                        </div>
                            break;
                }
            }
            <div class="form-group">
                <div style="position:relative;">
                    <label>Image</label>
                    <a class='btn' href='javascript:;'>
                        Chose file...
                        <input type="file" name="Image" size="400"
                               style="position:absolute;z-index:2;top:0;
                                left:0;filter: alpha(opacity=0); opacity:0;
                                background-color:transparent;color:transparent;"
                               onchange='$("#upload-file-info").html($(this).val());'>
                    </a>
                    <span class='label label-info' id="upload-file-info"></span>
                </div>
                @if (Model.ImageData == null)
                {
                    <div class="form-control-static">No image</div>
                }
                else
                {
                    <img class="img-thumbnail" width="300" height="300"
                         src="@Url.Action("GetImage", "Thing",
                        new { Model.ThingId })" />
                }
            </div>
        </div>
        <div class="panel-footer">
            <input type="submit" value="Save" class="btn btn-primary" />
            @Html.ActionLink("Cancel and back to list", "Index", null, new
            {
                @class = "btn btn-default"
            })
        </div>
    }
</div>